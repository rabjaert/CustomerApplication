// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

//i tried to fix this in my project, but I got a bunch of wierd errors. So moved these warnings to a globalsuppression file, so i could explain why I did it.
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.DeleteInventory(System.Uri)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.DeleteInventory(System.Uri)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetCompaniesAsync~System.Threading.Tasks.Task{CustomerApplication.GUI.Core.Models.Company[]}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetCount(System.Uri)~System.Threading.Tasks.Task{System.Int32}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetEmployeesAsync~System.Threading.Tasks.Task{CustomerApplication.GUI.Core.Models.Employee[]}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetEmployeesCompaniesAsync``1(System.Int32)~System.Threading.Tasks.Task{System.Collections.Generic.IList{``0}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetInventoriesCompaniesAsync``1(System.Int32)~System.Threading.Tasks.Task{System.Collections.Generic.IList{``0}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetUserAsync``1(System.Uri)~System.Threading.Tasks.Task{``0}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.LoginUser``1(System.Uri,System.Net.Http.StringContent)~System.Threading.Tasks.Task{``0}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.RegisterUser(System.Uri,System.Net.Http.StringContent)~System.Threading.Tasks.Task{System.Boolean}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Reliability", "CA2007:Consider calling ConfigureAwait on the awaited task", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.UpdateUser(System.Uri,System.Net.Http.StringContent)~System.Threading.Tasks.Task")]
//i tried to also do this, but it's sometimes hard to know the except exception you get when you do something in the app, so thats why some of the catch function only have exception. 
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.DeleteInventory(System.Uri)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetCount(System.Uri)~System.Threading.Tasks.Task{System.Int32}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetCount(System.Uri)~System.Threading.Tasks.Task{System.Int32}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetEmployeesCompaniesAsync``1(System.Int32)~System.Threading.Tasks.Task{System.Collections.Generic.IList{``0}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetInventoriesCompaniesAsync``1(System.Int32)~System.Threading.Tasks.Task{System.Collections.Generic.IList{``0}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1303:Do not pass literals as localized parameters", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetUserAsync``1(System.Uri)~System.Threading.Tasks.Task{``0}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetUserAsync``1(System.Uri)~System.Threading.Tasks.Task{``0}")]
//i didnt understand the error "based upon users local setting" which is what I tried to achieve
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetCount(System.Uri)~System.Threading.Tasks.Task{System.Int32}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Globalization", "CA1305:Specify IFormatProvider", Justification = "<Pending>", Scope = "member", Target = "~M:CustomerApplication.GUI.Core.Datahandler.Data.GetUserAsync``1(System.Uri)~System.Threading.Tasks.Task{``0}")]